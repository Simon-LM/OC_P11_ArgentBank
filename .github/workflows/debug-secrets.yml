# @format

name: Debug Secrets

on:
  push:
    branches: [test/ci-implementation]
  workflow_dispatch:

jobs:
  debug-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check secrets availability
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "=== SECRETS DEBUG ==="
          echo "VERCEL_TOKEN length: ${#VERCEL_TOKEN}"
          echo "VERCEL_ORG_ID: $VERCEL_ORG_ID"
          echo "VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID"
          echo ""
          echo "VERCEL_TOKEN starts with: ${VERCEL_TOKEN:0:8}..."
          echo ""
          if [ -z "$VERCEL_TOKEN" ]; then
            echo "❌ VERCEL_TOKEN is empty!"
          else
            echo "✅ VERCEL_TOKEN is set"
          fi
          
          if [ -z "$VERCEL_ORG_ID" ]; then
            echo "❌ VERCEL_ORG_ID is empty!"
          else
            echo "✅ VERCEL_ORG_ID is set"
          fi
          
          if [ -z "$VERCEL_PROJECT_ID" ]; then
            echo "❌ VERCEL_PROJECT_ID is empty!"
          else
            echo "✅ VERCEL_PROJECT_ID is set"
          fi

      - name: Test Vercel CLI with token
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          echo "=== VERCEL CLI TEST ==="
          npx vercel whoami || echo "❌ Token test failed"
